{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.getElementById('datetime-picker');\nconst startBtn = document.querySelector('button');\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const now = new Date();\n\n    if (userSelectedDate < now) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        backgroundColor: 'red',\n        messageColor: 'white',\n        messageSize: '16',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nstartBtn.disabled = true;\n\nconst fp = flatpickr(input, options);\n\nstartBtn.addEventListener('click', () => {\n  input.disabled = true;\n  startBtn.disabled = true;\n\n  const countdownInterval = setInterval(() => {\n    const now = new Date();\n    const difference = userSelectedDate.getTime() - now.getTime();\n\n    if (difference <= 0) {\n      clearInterval(countdownInterval);\n      updateTimer(0, 0, 0, 0);\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(difference);\n    updateTimer(days, hours, minutes, seconds);\n  }, 1000);\n});\n\nfunction updateTimer(days, hours, minutes, seconds) {\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["input","startBtn","userSelectedDate","options","selectedDates","iziToast","flatpickr","countdownInterval","now","difference","updateTimer","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"2GAMA,MAAMA,EAAQ,SAAS,eAAe,iBAAiB,EACjDC,EAAW,SAAS,cAAc,QAAQ,EAEhD,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAG9BF,EAFQ,IAAI,MAGdG,EAAS,MAAM,CACb,QAAS,qCACT,gBAAiB,MACjB,aAAc,QACd,YAAa,KACb,SAAU,UAClB,CAAO,EACDJ,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEAA,EAAS,SAAW,GAETK,EAAUN,EAAOG,CAAO,EAEnCF,EAAS,iBAAiB,QAAS,IAAM,CACvCD,EAAM,SAAW,GACjBC,EAAS,SAAW,GAEpB,MAAMM,EAAoB,YAAY,IAAM,CAC1C,MAAMC,EAAM,IAAI,KACVC,EAAaP,EAAiB,QAAS,EAAGM,EAAI,QAAO,EAE3D,GAAIC,GAAc,EAAG,CACnB,cAAcF,CAAiB,EAC/BG,EAAY,EAAG,EAAG,EAAG,CAAC,EACtB,MACD,CAED,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAU,EAC9DC,EAAYC,EAAMC,EAAOC,EAASC,CAAO,CAC1C,EAAE,GAAI,CACT,CAAC,EAED,SAASJ,EAAYC,EAAMC,EAAOC,EAASC,EAAS,CAClD,SAAS,cAAc,aAAa,EAAE,YAAcE,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCI,EAAeH,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCG,EAAeF,CAAO,CAC1B,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUG,EAAI,CAMrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}